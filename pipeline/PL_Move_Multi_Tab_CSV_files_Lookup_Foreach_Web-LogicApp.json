{
	"name": "pipeline1",
	"properties": {
		"activities": [
			{
				"name": "To_Lookup_Get_Table_list",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select * from dbo.metadata where isdisable =0",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_Azure_Sql_DB_Get_Table_List",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach_Table_Name",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "To_Lookup_Get_Table_list",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('To_Lookup_Get_Table_list').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Get_Metadata_Check_table_Exists",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_Check_Table_Exists",
									"type": "DatasetReference",
									"parameters": {
										"SchemaName": {
											"value": "@item().schemaname",
											"type": "Expression"
										},
										"Table_Name": {
											"value": "@item().tablename",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"exists"
								]
							}
						},
						{
							"name": "If_Check_Table_Exists",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Get_Metadata_Check_table_Exists",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@activity('Get_Metadata_Check_table_Exists').output.exists",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Copy data1",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "DelimitedTextSink",
												"storeSettings": {
													"type": "AzureBlobStorageWriteSettings"
												},
												"formatSettings": {
													"type": "DelimitedTextWriteSettings",
													"quoteAllText": true,
													"fileExtension": ".csv"
												}
											},
											"enableStaging": false,
											"parallelCopies": 6,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "DS_Check_Table_Exists",
												"type": "DatasetReference",
												"parameters": {
													"SchemaName": "@item().schemaname",
													"Table_Name": "@item().tablename"
												}
											}
										],
										"outputs": [
											{
												"referenceName": "DS_ABS_SINK",
												"type": "DatasetReference",
												"parameters": {
													"Container_Name": {
														"value": "@item().blobcontainer",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "Success_Stored procedure",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Copy data1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[pipeline_log_usp]",
											"storedProcedureParameters": {
												"copy_activity_end_time": {
													"value": {
														"value": "@activity('Copy data1').ExecutionEndTime",
														"type": "Expression"
													},
													"type": "DateTime"
												},
												"copy_activity_start_time": {
													"value": {
														"value": "@activity('Copy data1').ExecutionStartTime",
														"type": "Expression"
													},
													"type": "DateTime"
												},
												"copy_duration_in_sec": {
													"value": {
														"value": "@activity('Copy data1').output.copyDuration",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"datafactoryname": {
													"value": {
														"value": "@pipeline().DataFactory",
														"type": "Expression"
													},
													"type": "String"
												},
												"destination": {
													"value": "@item().blobcontainer",
													"type": "String"
												},
												"effective_integration_runtime": {
													"value": {
														"value": "@activity('Copy data1').output.effectiveIntegrationRuntime",
														"type": "Expression"
													},
													"type": "String"
												},
												"error_message": {
													"value": {
														"value": "@activity('Copy data1').error",
														"type": "Expression"
													},
													"type": "String"
												},
												"execution_status": {
													"value": {
														"value": "@activity('Copy data1').status",
														"type": "Expression"
													},
													"type": "String"
												},
												"execution_status_code": {
													"value": {
														"value": "@activity('Copy data1').statuscode",
														"type": "Expression"
													},
													"type": "String"
												},
												"no_of_parelle_copies": {
													"value": {
														"value": "@activity('Copy data1').output.usedParallelCopies",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"pipelinename": {
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"type": "String"
												},
												"rowscopied": {
													"value": "@activity('Copy data1').output.rowscopied",
													"type": "Int32"
												},
												"rowsread": {
													"value": "@activity('Copy data1').output.rowsread",
													"type": "Int32"
												},
												"runid": {
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													},
													"type": "String"
												},
												"sink_type": {
													"value": {
														"value": "@activity('Copy data1').output.executiondetails[0].sink.type",
														"type": "Expression"
													},
													"type": "String"
												},
												"source": {
													"value": "@item().tablename",
													"type": "String"
												},
												"source_type": {
													"value": {
														"value": "@activity('Copy data1').output.executiondetails[0].source.type",
														"type": "Expression"
													},
													"type": "String"
												},
												"triggerid": {
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													},
													"type": "String"
												},
												"triggername": {
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													},
													"type": "String"
												},
												"triggertime": {
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													},
													"type": "String"
												},
												"triggertype": {
													"value": {
														"value": "@pipeline().TriggerType",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LS_AzureSqlDB",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "Failure_Stored procedure_copy",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Copy data1",
												"dependencyConditions": [
													"Failed"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[pipeline_log_usp]",
											"storedProcedureParameters": {
												"copy_activity_end_time": {
													"value": {
														"value": "@activity('Copy data1').ExecutionEndTime",
														"type": "Expression"
													},
													"type": "DateTime"
												},
												"copy_activity_start_time": {
													"value": {
														"value": "@activity('Copy data1').ExecutionStartTime",
														"type": "Expression"
													},
													"type": "DateTime"
												},
												"copy_duration_in_sec": {
													"value": {
														"value": "@activity('Copy data1').output.copyDuration",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"datafactoryname": {
													"value": {
														"value": "@pipeline().DataFactory",
														"type": "Expression"
													},
													"type": "String"
												},
												"destination": {
													"value": "item().blobcontainer",
													"type": "String"
												},
												"effective_integration_runtime": {
													"value": {
														"value": "@activity('Copy data1').output.effectiveIntegrationRuntime",
														"type": "Expression"
													},
													"type": "String"
												},
												"error_message": {
													"value": {
														"value": "@activity('Copy data1').error",
														"type": "Expression"
													},
													"type": "String"
												},
												"execution_status": {
													"value": {
														"value": "@activity('Copy data1').status",
														"type": "Expression"
													},
													"type": "String"
												},
												"execution_status_code": {
													"value": {
														"value": "@activity('Copy data1').statuscode",
														"type": "Expression"
													},
													"type": "String"
												},
												"no_of_parelle_copies": {
													"value": {
														"value": "@activity('Copy data1').output.usedParallelCopies",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"pipelinename": {
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"type": "String"
												},
												"rowscopied": {
													"value": null,
													"type": "Int32"
												},
												"rowsread": {
													"value": null,
													"type": "Int32"
												},
												"runid": {
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													},
													"type": "String"
												},
												"sink_type": {
													"value": {
														"value": "@activity('Copy data1').output.executiondetails[0].sink.type",
														"type": "Expression"
													},
													"type": "String"
												},
												"source": {
													"value": "@item().tablename",
													"type": "String"
												},
												"source_type": {
													"value": {
														"value": "@activity('Copy data1').output.executiondetails[0].source.type",
														"type": "Expression"
													},
													"type": "String"
												},
												"triggerid": {
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													},
													"type": "String"
												},
												"triggername": {
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													},
													"type": "String"
												},
												"triggertime": {
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													},
													"type": "String"
												},
												"triggertype": {
													"value": {
														"value": "@pipeline().TriggerType",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LS_AzureSqlDB",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Success_Web",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "ForEach_Table_Name",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://prod-15.ukwest.logic.azure.com:443/workflows/84d9c77eaaac45b9961495b7876e0dde/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=guB3MkOaX6tRpDuJhpryvIqSfYUDhYeQWVEWa7Btk5U",
					"method": "POST",
					"body": {
						"value": "{\n\"DataFactoryName\":\"@{pipeline().DataFactory}\",\n\"EmailTo\":\"ramana.db@gmail.com\",\n\"PipelineName\":\"@{pipeline().Pipeline}\",\n\"status\":\"Success\"\n}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Failure_Web_copy",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "ForEach_Table_Name",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://prod-15.ukwest.logic.azure.com:443/workflows/84d9c77eaaac45b9961495b7876e0dde/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=guB3MkOaX6tRpDuJhpryvIqSfYUDhYeQWVEWa7Btk5U",
					"method": "POST",
					"body": {
						"value": "{\n\"DataFactoryName\":\"@{pipeline().DataFactory}\",\n\"EmailTo\":\"ramana.db@gmail.com\",\n\"PipelineName\":\"@{pipeline().Pipeline}\"\n\"status\":\"Failed\"\n}",
						"type": "Expression"
					}
				}
			}
		],
		"annotations": []
	}
}